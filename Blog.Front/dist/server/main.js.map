{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.server.module.ts","webpack:///./src/main.server.ts","webpack:///external \"@angular/animations\"","webpack:///external \"@angular/animations/browser\"","webpack:///external \"@angular/common\"","webpack:///external \"@angular/common/http\"","webpack:///external \"@angular/core\"","webpack:///external \"@angular/forms\"","webpack:///external \"@angular/http\"","webpack:///external \"@angular/platform-browser\"","webpack:///external \"@angular/platform-browser/animations\"","webpack:///external \"@angular/platform-server\"","webpack:///external \"@nguniversal/aspnetcore-engine\"","webpack:///external \"@nguniversal/module-map-ngfactory-loader\"","webpack:///external \"aspnet-prerendering\"","webpack:///external \"preboot\""],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;uDCnEA,gDACA;;;;;;;;;;;;;;;;;;;;ACCA;IAAA;QAME,UAAK,GAAG,gBAAgB,CAAC;IAC3B,CAAC;IAAD,mBAAC;AAAD,CAAC;AAFY,oCAAY;;;;;;;;;;;;;;;ACPzB,6EAAoD;AAQpD;IAYE,mBAC+B,UAAkB,EACvB,KAAa;QADR,eAAU,GAAV,UAAU,CAAQ;QACvB,UAAK,GAAL,KAAK,CAAQ;QAErC,IAAM,QAAQ,GAAG,0BAAiB,CAAC,UAAU,CAAC;YAC5C,CAAC,CAAC,gBAAgB;YAClB,CAAC,CAAC,eAAe,CAAC;QACpB,OAAO,CAAC,GAAG,CAAC,aAAW,QAAQ,oBAAe,KAAO,CAAC,CAAC;IACzD,CAAC;IACH,gBAAC;AAAD,CAAC;AAVY,8BAAS;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRtB;IAAA;IAa8B,CAAC;IAAD,sBAAC;AAAD,CAAC;AAAlB,0CAAe;;;;;;;;;;;;;;ACxB5B,wBAAwB;;AAExB,uEAA+C;AAC/C,sHAIwC;AACxC,kGAA2D;;AAK3D,qBAAc,EAAE,CAAC;AAEjB,kBAAe,0CAAoB,CAAC,gBAAM;IACxC,yCAAyC;IACzC,IAAM,YAAY,GAAmB;QACnC,WAAW,EAAE,uBAAuB;QACpC,QAAQ,8CAAiB;QACzB,OAAO,EAAE,MAAM;QACf,SAAS,EAAE,EAGV;KACF,CAAC;IAEF,MAAM,CAAC,sCAAkB,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,kBAAQ;QACnD,8CAA8C;QAC9C,QAAQ,CAAC,OAAO,CAAC,YAAY,GAAG,wCAAoB,CAAC;YACnD,QAAQ,EACN,oEAAoE;YACtE,UAAU,EAAE,MAAM,CAAC,IAAI,CAAC,kBAAkB,CAAC,wDAAwD;SACpG,CAAC,CAAC;QAEH,MAAM,CAAC;YACL,IAAI,EAAE,QAAQ,CAAC,IAAI;YACnB,OAAO,EAAE,QAAQ,CAAC,OAAO,CAAC,uEAAuE;SAClG,CAAC;IACJ,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;ACxCH,gD;;;;;;;;;;;ACAA,wD;;;;;;;;;;;ACAA,4C;;;;;;;;;;;ACAA,iD;;;;;;;;;;;ACAA,0C;;;;;;;;;;;ACAA,2C;;;;;;;;;;;ACAA,0C;;;;;;;;;;;ACAA,sD;;;;;;;;;;;ACAA,iE;;;;;;;;;;;ACAA,qD;;;;;;;;;;;ACAA,2D;;;;;;;;;;;ACAA,qE;;;;;;;;;;;ACAA,gD;;;;;;;;;;;ACAA,oC","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","MY ANGULAR APP !!\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Tour of Heroes';\n}\n","import { isPlatformBrowser } from \"@angular/common\";\nimport { APP_ID, Inject, NgModule, PLATFORM_ID } from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\nimport { HttpModule } from \"@angular/http\";\nimport { BrowserModule } from \"@angular/platform-browser\";\nimport { PrebootModule } from \"preboot\";\nimport { AppComponent } from \"./app.component\";\n\n@NgModule({\n  imports: [\n    BrowserModule.withServerTransition({ appId: \"blog\" }),\n    FormsModule,\n    HttpModule,\n    PrebootModule.withConfig({ appRoot: \"app-root\" })\n  ],\n  declarations: [AppComponent],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n  constructor(\n    @Inject(PLATFORM_ID) private platformId: Object,\n    @Inject(APP_ID) private appId: string\n  ) {\n    const platform = isPlatformBrowser(platformId)\n      ? \"in the browser\"\n      : \"on the server\";\n    console.log(`Running ${platform} with appId=${appId}`);\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport {\n  ServerModule,\n  ServerTransferStateModule\n} from \"@angular/platform-server\";\nimport { ModuleMapLoaderModule } from \"@nguniversal/module-map-ngfactory-loader\";\n\nimport { AppModule } from \"./app.module\";\nimport { AppComponent } from \"./app.component\";\nimport { NoopAnimationsModule } from \"@angular/platform-browser/animations\";\n\n@NgModule({\n  imports: [\n    NoopAnimationsModule,\n    AppModule,\n    ServerModule,\n    ModuleMapLoaderModule,\n    ServerTransferStateModule\n  ],\n  providers: [\n    // Add universal-only providers here\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppServerModule {}\n","// import \"./polyfills\";\n\nimport { enableProdMode } from \"@angular/core\";\nimport {\n  createTransferScript,\n  IEngineOptions,\n  ngAspnetCoreEngine\n} from \"@nguniversal/aspnetcore-engine\";\nimport { createServerRenderer } from \"aspnet-prerendering\";\n\n// Grab the (Node) server-specific NgModule\nimport { AppServerModule } from \"./app/app.server.module\";\n\nenableProdMode();\n\nexport default createServerRenderer(params => {\n  // Platform-server provider configuration\n  const setupOptions: IEngineOptions = {\n    appSelector: \"<app-root></app-root>\",\n    ngModule: AppServerModule,\n    request: params,\n    providers: [\n      // Optional - Any other Server providers you want to pass\n      // (remember you'll have to provide them for the Browser as well)\n    ]\n  };\n\n  return ngAspnetCoreEngine(setupOptions).then(response => {\n    // Apply your transferData to response.globals\n    response.globals.transferData = createTransferScript({\n      someData:\n        \"Transfer this to the client on the window.TRANSFER_CACHE {} object\",\n      fromDotnet: params.data.thisCameFromDotNET // example of data coming from dotnet, in HomeController\n    });\n\n    return {\n      html: response.html, // our <app-root> serialized\n      globals: response.globals // all of our styles/scripts/meta-tags/link-tags for aspnet to serve up\n    };\n  });\n});\n","module.exports = require(\"@angular/animations\");","module.exports = require(\"@angular/animations/browser\");","module.exports = require(\"@angular/common\");","module.exports = require(\"@angular/common/http\");","module.exports = require(\"@angular/core\");","module.exports = require(\"@angular/forms\");","module.exports = require(\"@angular/http\");","module.exports = require(\"@angular/platform-browser\");","module.exports = require(\"@angular/platform-browser/animations\");","module.exports = require(\"@angular/platform-server\");","module.exports = require(\"@nguniversal/aspnetcore-engine\");","module.exports = require(\"@nguniversal/module-map-ngfactory-loader\");","module.exports = require(\"aspnet-prerendering\");","module.exports = require(\"preboot\");"],"sourceRoot":""}